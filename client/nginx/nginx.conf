
server {

  listen 80;
  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  location ^~ /api  {
    proxy_pass http://backend:4000;
    proxy_read_timeout 1200s; # how long to wait for response from backend (backend has to do a lot, so wait 1200s = 20 minutes max);
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    client_max_body_size 100M;
}

location ^~ /express  {
    proxy_pass http://backend:4001;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    client_max_body_size 100M;

}

}

# server {
#     listen 80 default_server;

#     server_name hpt.hopto.org;

#     location / {
#     root   /usr/share/nginx/html;
#     index  index.html index.htm;
#     try_files $uri $uri/ /index.html;
#   }

#   error_page   500 502 503 504  /50x.html;

#   location = /50x.html {
#     root   /usr/share/nginx/html;
#   }

#   location /.well-known/pki-validation/ {#This deals with getting your ssl certificate from ZeroSSL
#       allow all;
#       root /usr/share/nginx/html; #copy the auth file you downloaded from ZeroSSL to /client on the Duke VM to pass verification
#   }

#    location ^~ /api  { #REPLACE /api WITH WHATEVER ROUTES YOU HAVE SETUP ON YOUR BACKEND
#     proxy_pass http://backend:5000;
# }

# location ^~ /ws {
#         proxy_pass http://backend:4000/grapqhql;
#         # this magic is needed for WebSocket
#         proxy_http_version  1.1;
#         proxy_set_header    Upgrade $http_upgrade;
#         proxy_set_header    Connection "Upgrade";
#         proxy_set_header    Host $http_host;
#         proxy_set_header    X-Real-IP $remote_addr;
#     }
# }
